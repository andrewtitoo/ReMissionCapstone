"""Initial migration

Revision ID: 838d099c3442
Revises: 
Create Date: 2024-11-11 17:24:01.959524

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '838d099c3442'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('predictions', schema=None) as batch_op:
        batch_op.alter_column('id',
                              existing_type=sa.INTEGER(),
                              nullable=False,
                              autoincrement=True)
        batch_op.alter_column('user_id',
                              existing_type=sa.INTEGER(),
                              type_=sa.String(length=10),
                              existing_nullable=False)
        batch_op.alter_column('predicted_at',
                              existing_type=sa.TIMESTAMP(),
                              type_=sa.DateTime(),
                              existing_nullable=True,
                              existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        # batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['user_id'])

    with op.batch_alter_table('symptom_logs', schema=None) as batch_op:
        batch_op.alter_column('id',
                              existing_type=sa.INTEGER(),
                              nullable=False,
                              autoincrement=True)
        batch_op.alter_column('user_id',
                              existing_type=sa.INTEGER(),
                              type_=sa.String(length=10),
                              existing_nullable=False)
        batch_op.alter_column('sleep_hours',
                              existing_type=sa.REAL(),
                              type_=sa.Float(),
                              existing_nullable=False)
        batch_op.alter_column('logged_at',
                              existing_type=sa.TIMESTAMP(),
                              type_=sa.DateTime(),
                              existing_nullable=True,
                              existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        # batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['user_id'])

    with op.batch_alter_table('trend_analysis', schema=None) as batch_op:
        batch_op.alter_column('id',
                              existing_type=sa.INTEGER(),
                              nullable=False,
                              autoincrement=True)
        batch_op.alter_column('user_id',
                              existing_type=sa.INTEGER(),
                              type_=sa.String(length=10),
                              existing_nullable=False)
        batch_op.alter_column('generated_at',
                              existing_type=sa.TIMESTAMP(),
                              type_=sa.DateTime(),
                              existing_nullable=True,
                              existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        # batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['user_id'])

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('user_id', sa.String(length=10), nullable=False))
        batch_op.alter_column('id',
                              existing_type=sa.INTEGER(),
                              nullable=False,
                              autoincrement=True)
        batch_op.alter_column('created_at',
                              existing_type=sa.TIMESTAMP(),
                              type_=sa.DateTime(),
                              existing_nullable=True,
                              existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.create_unique_constraint(None, ['user_id'])
        batch_op.drop_column('email')
        batch_op.drop_column('password_hash')
        batch_op.drop_column('username')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('username', sa.VARCHAR(length=50), nullable=False))
        batch_op.add_column(sa.Column('password_hash', sa.VARCHAR(length=128), nullable=False))
        batch_op.add_column(sa.Column('email', sa.VARCHAR(length=120), nullable=False))
        batch_op.drop_constraint(None, type_='unique')
        batch_op.alter_column('created_at',
                              existing_type=sa.DateTime(),
                              type_=sa.TIMESTAMP(),
                              existing_nullable=True,
                              existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('id',
                              existing_type=sa.INTEGER(),
                              nullable=True,
                              autoincrement=True)
        batch_op.drop_column('user_id')

    with op.batch_alter_table('trend_analysis', schema=None) as batch_op:
        # batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'], ondelete='CASCADE')
        batch_op.alter_column('generated_at',
                              existing_type=sa.DateTime(),
                              type_=sa.TIMESTAMP(),
                              existing_nullable=True,
                              existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('user_id',
                              existing_type=sa.String(length=10),
                              type_=sa.INTEGER(),
                              existing_nullable=False)
        batch_op.alter_column('id',
                              existing_type=sa.INTEGER(),
                              nullable=True,
                              autoincrement=True)

    with op.batch_alter_table('symptom_logs', schema=None) as batch_op:
        # batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'], ondelete='CASCADE')
        batch_op.alter_column('logged_at',
                              existing_type=sa.DateTime(),
                              type_=sa.TIMESTAMP(),
                              existing_nullable=True,
                              existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('sleep_hours',
                              existing_type=sa.Float(),
                              type_=sa.REAL(),
                              existing_nullable=False)
        batch_op.alter_column('user_id',
                              existing_type=sa.String(length=10),
                              type_=sa.INTEGER(),
                              existing_nullable=False)
        batch_op.alter_column('id',
                              existing_type=sa.INTEGER(),
                              nullable=True,
                              autoincrement=True)

    with op.batch_alter_table('predictions', schema=None) as batch_op:
        # batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'], ondelete='CASCADE')
        batch_op.alter_column('predicted_at',
                              existing_type=sa.DateTime(),
                              type_=sa.TIMESTAMP(),
                              existing_nullable=True,
                              existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('user_id',
                              existing_type=sa.String(length=10),
                              type_=sa.INTEGER(),
                              existing_nullable=False)
        batch_op.alter_column('id',
                              existing_type=sa.INTEGER(),
                              nullable=True,
                              autoincrement=True)

    # ### end Alembic commands ###
